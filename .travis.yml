language: rust
rust:
  - stable
  - beta
  - nightly
cache: cargo
matrix:
  allow_failures:
  - rust: nightly
  fast_finish: true
  include:
    - os: windows
      rust: nightly
    - os: windows
      rust: beta
    - os: windows
      rust: stable
      env: TARGET=i686-pc-windows-msvc
    - os: windows
      rust: stable
      env: TARGET=x86_64-pc-windows-gnu
    - os: windows
      rust: stable
      env: TARGET=x86_64-pc-windows-msvc
    - os: osx
      rust: stable
    - os: osx
      rust: beta
    - os: osx
      rust: nightly
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          update: true
          packages:
            - gcc-multilib
            - libtinfo-dev
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
      addons:
        apt:
          update: true
          packages:
            - libtinfo-dev
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: stable
      env: TARGET=aarch64-unknown-linux-gnu NO_TEST=1 LINKER="aarch64-linux-gnu-gcc" AR="aarch64-linux-gnu-ar"
      addons:
        apt:
          update: true
          packages:
            - libc6-dev-arm64-cross
            - gcc-aarch64-linux-gnu
            - libtinfo-dev
    - os: linux
      rust: stable
      env: TARGET=arm-unknown-linux-gnueabihf NO_TEST=1 LINKER="arm-linux-gnueabihf-gcc" AR="arm-linux-gnueabihf-ar"
      addons:
        apt:
          update: true
          packages:
            - libc6-dev-armhf-cross
            - gcc-arm-linux-gnueabihf
            - libtinfo-dev
install:
  - set | egrep '^TARGET' || TARGET=$(rustup target list | grep installed | awk '{print $1}')
  - rustup target add ${TARGET}
script:
  - test -n "${NO_TEST}" || RUST_BACKTRACE=1 cargo test --verbose --all --target ${TARGET}
before_deploy:
  - mkdir -p .cargo
  - test -z "${LINKER}" || echo -e "[target.${TARGET}]\nlinker = \"${LINKER}\"\nar = \"${AR}\"\n" >> .cargo/config
  - cargo build --release --verbose --all --target ${TARGET}
  - PACKAGE_NAME=regtail-${TRAVIS_TAG}-${TARGET}
  - mkdir ${PACKAGE_NAME}
  - cp target/${TARGET}/release/regtail LICENSE README.md ${PACKAGE_NAME}
  - tar czf ${PACKAGE_NAME}.tar.gz ${PACKAGE_NAME}
deploy:
  provider: releases
  api_key:
    secure: "KaopIcvDwze8iHxS3bY3BW47QSBcCj9lxqJ1xSL+t1lv2btUvpcfSEkmbUTy+DLIfFeJHDKb9qjKA42UuHTQ/abvedd5No+2TqkIF9WYvBSsPrx32lE/tnhS9isqIXTdLkqPC6DUJu0fvsmt+5vqw8exCZG1r2XPiR9tlR5nMBSgDkdsbjQPawyjrHwd76K21DJyhqS2szu7R021Cj0gsJAV8PVc/uvRS97sTYKaDgMryZcW9GS5N1PfRAnzS2wKKYs5RKbk6Gz1DUDo6cNK00Hod617+h+KD7xoWmSGqFBsHxaeFWgO+CyAGXuhbFch8hLh/n4xZivcwK8z4fOuV9+EayxdFxjkSJgwcSfD5DvJ2f2Fbjmp11B4XUT+JX5voSEwr6vGnv177cSpBK2ziBoYevtE/AIC99euamlanLKrPdDuXzOP+XLLzD9Xc4Y+QZ0fQVERhbcnhRMu0hboNm9cSS53TC+RY4xKdn2rJlm1cCc4aJYmV+bOJF8Q0eHpTuAXXfTqNNWXql4uG8FMLWcHi0yiVJI976xuJOyePQRmKO8nYZ1lmUhx44uRnUdtbp57j8Dnwz3SHQ55Tm3aRfd/eryOwE4aQs15Ias9jj4ShhLxdPciX83gqeDlzpsv/XR2SQi5k/m5T1dAoQdzMt6tWNWVp+ORdMiXY3Tne8g="
  file: regtail-${TRAVIS_TAG}-${TARGET}.tar.gz
  on:
    repo: StoneDot/regtail
    tags: true
    condition: ${TRAVIS_RUST_VERSION} = stable
  skip_cleanup: true
